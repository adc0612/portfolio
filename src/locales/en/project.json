{
  "section": {
    "title": "Project Introduction",
    "date": "Development Period",
    "skill": "Technologies Used",
    "problem": "Challenges & Solutions",
    "button": "More Details..."
  },
  "contents": [
    {
      "name": "Inference Service Page Development",
      "introduction": ["The Inference Service page was developed as a full-featured interface for deploying, managing, and monitoring machine learning models.", "My primary tasks included visualizing data for users to quickly assess deployed model performance and designing the deployment process."],
      "goal": "Simplify model deployment process, optimize real-time data monitoring, and enhance UX.",
      "skills": ["React", "Typescript", "React-query", "react-hook-form", "Echarts"],
      "dates": ["2023.01 ~ 2024.12"],
      "sections": [
        {
          "problem": "Code redundancy and maintenance challenges due to complex nested form structures.",
          "contents": ["Simplified code by splitting forms into sections using useFormContext.", "Developed a custom hook to automatically generate and manage nested field paths in useFormContext."],
          "effect": ["Reduced redundant code by 40%, lowered maintenance costs, and improved form addition speed by 30%."]
        },
        {
          "problem": "Inference Service list API response delays.",
          "contents": ["Combined React Router's loader with React Query's queryClient to prefetch data before page entry."],
          "effect": ["Reduced initial loading time by 30-40%, improving UX."]
        }
      ],
      "imageName": "inference-service.gif"
    },
    {
      "name": "Experiment Page Development & Enhancement",
      "introduction": ["The Experiment page is designed to import models from MLflow and manage them within Runway."],
      "goal": "Enhance data exploration and experiment management efficiency.",
      "skills": ["React", "Typescript", "React-query", "ag-grid"],
      "dates": ["2023.01 ~ 2024.06"],
      "sections": [
        {
          "problem": "Existing experiment management UI table had limited functionality and lacked a user-friendly interface.",
          "contents": ["Replaced the existing MUI Table with AG Grid."],
          "effect": ["Added column movement, filtering, and sorting features using AG Grid.", "Improved UX for data exploration and made feature expansion easier."]
        },
        {
          "problem": "Paging-based navigation made data exploration cumbersome.",
          "contents": ["Implemented Infinite Scroll to optimize list browsing speed."],
          "effect": ["Improved UX and optimized large dataset handling."]
        }
      ],
      "imageName": "experiment.gif"
    },
    {
      "name": "AutoML Page Development",
      "introduction": ["The AutoML page is a tabular interface for automatically optimizing machine learning models.", "Users can select models and save them as models or pipelines in Runway."],
      "goal": "Accelerate MVP development speed and optimize lightweight interactions.",
      "skills": ["Svelte"],
      "dates": ["2024.09 ~ 2024.11"],
      "sections": [
        {
          "problem": "Initial plan to use React UI resulted in excessive code and slowed development.",
          "contents": ["Adopted Svelte to eliminate unnecessary code at the compile stage."],
          "effect": ["Accelerated MVP development and reduced maintenance burden."]
        },
        {
          "problem": "Required a rapid release.",
          "contents": ["Minimized components and simplified state management."],
          "effect": ["Enabled quick deployment of AutoML features."]
        }
      ],
      "imageName": "automl.gif"
    },
    {
      "name": "Runway Notification Feature Addition",
      "introduction": ["Implemented a notification feature for key events in Runway, such as model deployment success/failure, experiment results, and project user status updates."],
      "goal": "Provide real-time notifications and enhance data exploration efficiency.",
      "skills": ["React", "Typescript", "React-query"],
      "dates": ["2024.10 ~ 2024.11"],
      "sections": [
        {
          "problem": "Existing plan used a 'Load More' approach, leading to inefficient UX.",
          "contents": ["Implemented Infinite Scroll to optimize scroll-based data loading."],
          "effect": ["Improved notification data retrieval performance and enhanced UX."]
        }
      ],
      "imageName": "notification.gif"
    }
  ]
}
