{
  "section": {
    "title": "프로젝트 소개",
    "date": "개발 기간",
    "skill": "사용 기술",
    "problem": "문제 & 해결 과정",
    "button": "More Details..."
  },
  "contents": [
    {
      "name": "Inference Service 페이지 개발",
      "introduction": ["Inference Service 페이지는 머신러닝 모델을 배포하고 관리 및 모니터링할 수 있는 전체 페이지 개발했습니다.", "사용자가 배포된 모델의 성능을 한눈에 파악할 수 있도록 데이터를 시각화하고, 배포 프로세스를 만드는 것이 주 업무였습니다."],
      "goal": "모델 배포 프로세스 단순화, 실시간 데이터 모니터링 최적화, UX 개선",
      "skills": ["React", "Typescript", "React-query", "react-hook-form", "Echarts"],
      "dates": ["2023.01 ~ 2024.12"],
      "sections": [
        {
          "problem": "복잡한 중첩 폼 구조로 인한 코드 중복과 유지보수 어려움",
          "contents": ["useFormContext로 폼을 섹션별로 분리해 코드 간결화", "Custom Hook 개발 → useFormContext의 중첩된 필드 경로를 자동 생성 및 관리"],
          "effect": ["중복 코드 40% 감소, 유지보수 비용 절감, 폼 추가 시 개발 속도 30% 향상"]
        },
        {
          "problem": "Inference Service 리스트 API 응답 속도 지연",
          "contents": ["React Router의 loader와 React Query의 queryClient를 결합해 페이지 진입 전 데이터 프리패칭"],
          "effect": ["초기 로딩 시간 30~40% 단축, UX 개선"]
        }
      ],
      "imageName": "inference-service.gif"
    },
    {
      "name": "Experiment 페이지 개발 및 개선",
      "introduction": ["Experiment 페이지는 MLflow에서 모델을 가져와 Runway에서 관리 및 사용하는 페이지입니다."],
      "goal": "데이터 탐색 및 실험 관리 효율화",
      "skills": ["React", "Typescript", "React-query", "ag-grid"],
      "dates": ["2023.01 ~ 2024.06"],
      "sections": [
        {
          "problem": "기존 Experiment 관리 UI 테이블은 기능이 제한적이고, 사용자 친화적인 인터페이스가 부족함",
          "contents": ["기존의 MUI Table에서 AG Grid를 도입하여 구현했습니다."],
          "effect": ["AG Grid 도입으로 column 이동, 필터링, 정렬 기능 추가", "데이터 탐색 UX 향상, 기능 확장 용이"]
        },
        {
          "problem": "페이징 방식으로 인한 데이터 탐색 불편",
          "contents": ["Infinite Scroll 도입 → 리스트 탐색 속도 최적화"],
          "effect": ["UX 개선, 대량 데이터 핸들링 최적화"]
        }
      ],
      "imageName": "experiment.gif"
    },
    {
      "name": "AutoML 페이지 개발",
      "introduction": ["AutoML 페이지는 머신러닝 모델을 자동으로 최적화하여 테이블 형태의 페이지입니다.", "모델을 선택하여 Runway에 모델이나 파이프라인으로 저장하는 기능을 제공하는 페이지입니다."],
      "goal": "MVP 개발 속도 향상, 가벼운 인터랙션 성능 최적화",
      "skills": ["Svelte"],
      "dates": ["2024.09 ~ 2024.11"],
      "sections": [
        {
          "problem": "React 기반 UI 계획 → 불필요한 코드 많음, 개발 속도 저하",
          "contents": ["Svelte 도입 → 컴파일 단계에서 불필요한 코드 제거"],
          "effect": ["MVP 개발 속도 향상, 유지보수 부담 감소"]
        },
        {
          "problem": "빠른 릴리즈 필요",
          "contents": ["컴포넌트 최소화 & 상태 관리 단순화"],
          "effect": ["AutoML 기능을 신속하게 배포"]
        }
      ],
      "imageName": "automl.gif"
    },
    {
      "name": "Runway Notification 기능 추가",
      "introduction": ["Runway 내 주요 이벤트(모델 배포 성공/실패, 실험 결과, 프로젝트 유저 상태 등)에 대한 알림(Notification) 기능을 추가하는 목표였습니다."],
      "goal": "실시간 알림 제공, 데이터 탐색 효율화",
      "skills": ["React", "Typescript", "React-query"],
      "dates": ["2024.10 ~ 2024.11"],
      "sections": [
        {
          "problem": "기존 계획은 'Load More' 방식 → UX 비효율적",
          "contents": ["Infinite Scroll 도입 → 스크롤 기반 데이터 로딩 최적화"],
          "effect": ["알림 데이터 조회 성능 향상, UX 개선"]
        }
      ],
      "imageName": "notification.gif"
    }
  ]
}
